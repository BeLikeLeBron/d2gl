#pragma once

"#ifdef VERTEX\n"
"layout(location=0) in vec2 Position;"
"layout(location=1) in vec2 TexCoord;"
"uniform mat4 u_MVP;"
"out vec2 v_TexCoord;"
"void main()"
"{"
  "gl_Position=u_MVP*vec4(Position,0,1);"
  "v_TexCoord=TexCoord;"
"}"
"\n#elif FRAGMENT\n"
"layout(location=0) out vec4 FragColor;layout(std140) uniform ubo_Metrics{vec2 u_OutSize;vec2 u_TexSize;vec2 u_RelSize;};"
"uniform sampler2D u_Texture;"
"in vec2 v_TexCoord;"
"\n#define INTERNAL_RES 1.0\n"
"vec3 v=vec3(1);"
"vec3 t(sampler2D u,vec2 e,vec4 y)"
"{"
  "vec3 a=texture(u,e+y.zw).xyz,n=texture(u,e+y.xw).xyz,x=texture(u,e+y.xy).xyz,l=texture(u,e+y.zy).xyz;"
  "float P=dot(abs(a-x),v)+.001,d=dot(abs(l-n),v)+.001;"
  "return.5*(d*(a+x)+P*(l+n))/(P+d);"
"}"
"void main()"
"{"
  "vec2 e=4.*u_TexSize/INTERNAL_RES,u=1./e;"
  "vec4 n=vec4(u,-u);"
  "vec2 a=v_TexCoord*e,y=fract(a),x=vec2(u.x,0),d=vec2(0,u.y),z=vec2(u.xy),P=vec2(-u.x,u.y),l=floor(a)*u;"
  "vec3 m=t(u_Texture,l-z,n),s=t(u_Texture,l-d,n),r=t(u_Texture,l-P,n),w=t(u_Texture,l-x,n),A=t(u_Texture,l,n),C=t(u_Texture,l+x,n),D=t(u_Texture,l+P,n),E=t(u_Texture,l+d,n),F=t(u_Texture,l+z,n),f,S,i,o;"
  "float I,B;"
  "I=dot(abs(m-A),v)+.001;"
  "B=dot(abs(s-w),v)+.001;"
  "f=(B*(m+A)+I*(s+w))/(I+B);"
  "I=dot(abs(s-C),v)+.001;"
  "B=dot(abs(r-A),v)+.001;"
  "S=(B*(s+C)+I*(r+A))/(I+B);"
  "I=dot(abs(w-E),v)+.001;"
  "B=dot(abs(D-A),v)+.001;"
  "i=(B*(w+E)+I*(D+A))/(I+B);"
  "I=dot(abs(A-F),v)+.001;"
  "B=dot(abs(C-E),v)+.001;"
  "o=(B*(A+F)+I*(C+E))/(I+B);"
  "vec3 T=.5*((o*y.x+i*(1.-y.x))*y.y+(S*y.x+f*(1.-y.x))*(1.-y.y));"
  "FragColor=vec4(T,1);"
"}"
"\n#endif"
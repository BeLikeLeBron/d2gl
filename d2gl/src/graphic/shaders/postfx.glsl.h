#pragma once

"#define P(x,y)texture(x,y).rgb\n"
"\n#define e_t_div 16.0\n"
"\n#define s_steps 16\n"
"float v(vec3 v)"
"{"
  "return v.y*(.587/.299)+v.x;"
"}"
"vec3 v(sampler2D u,vec2 y,vec2 s)"
"{"
  "vec3 i=P(u,y+vec2(0,-s.y)),x=P(u,y+vec2(-s.x,0)),m=P(u,y),l=P(u,y+vec2(s.x,0)),d=P(u,y+vec2(0,s.y));"
  "float f=v(i),a=v(x),n=v(m),e=v(l),b=v(d),k=min(n,min(min(f,a),min(b,e))),r=max(n,max(max(f,a),max(b,e))),g=r-k;"
  "if(g<max(1./e_t_div,r*.125))"
    "return m;"
  "vec3 F=i+x+m+l+d;"
  "float C=(f+a+e+b)*.25,A=abs(C-n),c=max(0.,A/g-.25)*(1./.75);"
  "c=min(.75,c);"
  "vec3 T=P(u,y+vec2(-s.x,-s.y)),p=P(u,y+vec2(s.x,-s.y)),t=P(u,y+vec2(-s.x,s.y)),h=P(u,y+vec2(s.xy));"
  "F+=T+p+t+h;"
  "F*=vec3(1./9.);"
  "float o=v(T),B=v(p),D=v(t),E=v(h),G=abs(.25*o+-.5*f+.25*B)+abs(.5*a+-1.*n+.5*e)+abs(.25*D+-.5*b+.25*E),H=abs(.25*o+-.5*a+.25*D)+abs(.5*f+-1.*n+.5*b)+abs(.25*B+-.5*e+.25*E);"
  "bool V=H>=G;"
  "float I=V?"
    "-s.y:"
    "-s.x;"
  "if(!V)"
    "f=a,b=e;"
  "float w=abs(f-n),J=abs(b-n);"
  "f=(f+n)*.5;"
  "b=(b+n)*.5;"
  "if(w<J)"
    "f=b,f=b,w=J,I*=-1.;"
  "vec2 K;"
  "K.x=y.x+(V?"
    "0.:"
    "I*.5);"
  "K.y=y.y+(V?"
    "I*.5:"
    "0.);"
  "w*=.25;"
  "vec2 L=K,M=V?"
    "vec2(s.x,0):"
    "vec2(0,s.y);"
  "float N=f,O=f;"
  "bool Q=false,R=false;"
  "K+=M*vec2(-1);"
  "L+=M*vec2(1);"
  "for(int S=0;S<s_steps;S++)"
    "{"
      "if(!Q)"
        "N=v(P(u,K.xy));"
      "if(!R)"
        "O=v(P(u,L.xy));"
      "Q=Q||abs(N-f)>=w;"
      "R=R||abs(O-f)>=w;"
      "if(Q&&R)"
        "break;"
      "if(!Q)"
        "K-=M;"
      "if(!R)"
        "L+=M;"
    "}"
  "float S=V?"
    "y.x-K.x:"
    "y.y-K.y,U=V?"
    "L.x-y.x:"
    "L.y-y.y;"
  "bool W=S<U;"
  "N=W?"
    "N:"
    "O;"
  "if(n-f<0.==N-f<0.)"
    "I=0.;"
  "float X=U+S;"
  "S=W?"
    "S:"
    "U;"
  "float Y=(.5+S*(-1./X))*I;"
  "vec3 Z=P(u,vec2(y.x+(V?"
    "0.:"
    "Y),y.y+(V?"
    "Y:"
    "0.)));"
  "return vec3(-c)*Z+(F*vec3(c)+Z);"
"}"
"\n#ifdef VERTEX\n"
"layout(location=0) in vec2 Position;"
"layout(location=1) in vec2 TexCoord;"
"layout(location=5) in ivec4 Flags;"
"uniform mat4 u_MVP;"
"out vec2 v_TexCoord;"
"flat out ivec4 v_Flags;"
"void main()"
"{"
  "gl_Position=u_MVP*vec4(Position,0,1);"
  "v_TexCoord=TexCoord;"
  "v_Flags=Flags;"
"}"
"\n#elif FRAGMENT\n"
"layout(location=0) out vec4 FragColor;layout(std140) uniform ubo_Metrics{float u_SharpStrength;float u_SharpClamp;float u_Radius;float pad1;vec2 u_RelSize;};"
"uniform sampler2D u_Textures[2];"
"in vec2 v_TexCoord;"
"flat in ivec4 v_Flags;"
"\n#define CoefLuma vec3(0.2126,0.7152,0.0722)\n"
"vec3 v(sampler2D u,vec2 y)"
"{"
  "vec3 v=P(u,y),f=P(u,y+u_RelSize*u_Radius),n=P(u,y-u_RelSize*u_Radius),s=CoefLuma*u_SharpStrength*1.5;"
  "vec4 i=vec4(s*(.5/u_SharpClamp),.5);"
  "float x=u_SharpClamp*2.*clamp(dot(vec4(v-(f+n)/2.,1),i),0.,1.)-u_SharpClamp;"
  "return clamp(v+x,0.,1.);"
"}"
"void main()"
"{"
  "switch(v_Flags.x){"
    "case 0:"
      "FragColor=vec4(v(u_Textures[v_Flags.y],v_TexCoord),1);"
      "break;"
    "case 1:"
      "FragColor=vec4(v(u_Textures[v_Flags.y],v_TexCoord,u_RelSize),1);"
      "break;"
    "case 2:"
      "FragColor=vec4(P(u_Textures[0],v_TexCoord),1);"
      "break;"
  "}"
"}"
"\n#elif COMPUTE\n"
"layout(local_size_x=16,local_size_y=16)in;"
"uniform sampler2D u_InTexture;"
"writeonly uniform image2D u_OutTexture;"
"uniform int u_Flag=0;"
"void main()"
"{"
  "ivec2 u=ivec2(gl_GlobalInvocationID.xy);"
  "vec2 y=vec2(textureSize(u_InTexture,0)),x=(vec2(u)+vec2(.5))/y;"
  "vec3 f=v(u_InTexture,x,vec2(1)/y);"
  "imageStore(u_OutTexture,u,vec4(f,1));"
"}"
"\n#endif"